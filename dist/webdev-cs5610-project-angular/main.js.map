{"version":3,"sources":["webpack:///../webdev-summer2018-angular/src/app/models/user.model.client.ts","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/blog-info/blog-info.component.css","webpack:///./src/app/blog-info/blog-info.component.html","webpack:///./src/app/blog-info/blog-info.component.ts","webpack:///./src/app/blog-list/blog-list.component.css","webpack:///./src/app/blog-list/blog-list.component.html","webpack:///./src/app/blog-list/blog-list.component.ts","webpack:///./src/app/blog-search/blog-search.component.css","webpack:///./src/app/blog-search/blog-search.component.html","webpack:///./src/app/blog-search/blog-search.component.ts","webpack:///./src/app/comments-list/comments-list.component.css","webpack:///./src/app/comments-list/comments-list.component.html","webpack:///./src/app/comments-list/comments-list.component.ts","webpack:///./src/app/comments/comments.component.css","webpack:///./src/app/comments/comments.component.html","webpack:///./src/app/comments/comments.component.ts","webpack:///./src/app/create-post/create-post.component.css","webpack:///./src/app/create-post/create-post.component.html","webpack:///./src/app/create-post/create-post.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/models/comment.model.ts","webpack:///./src/app/models/post.model.ts","webpack:///./src/app/models/share.model.ts","webpack:///./src/app/models/user.model.ts","webpack:///./src/app/post-edit/post-edit.component.css","webpack:///./src/app/post-edit/post-edit.component.html","webpack:///./src/app/post-edit/post-edit.component.ts","webpack:///./src/app/post-list/post-list.component.css","webpack:///./src/app/post-list/post-list.component.html","webpack:///./src/app/post-list/post-list.component.ts","webpack:///./src/app/post-view/post-view.component.css","webpack:///./src/app/post-view/post-view.component.html","webpack:///./src/app/post-view/post-view.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/project-home/project-home.component.css","webpack:///./src/app/project-home/project-home.component.html","webpack:///./src/app/project-home/project-home.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/search/search.component.css","webpack:///./src/app/search/search.component.html","webpack:///./src/app/search/search.component.ts","webpack:///./src/app/services/bloggerApi.service.client.ts","webpack:///./src/app/services/comment.service.client.ts","webpack:///./src/app/services/post.service.client.ts","webpack:///./src/app/services/share.service.client.ts","webpack:///./src/app/services/user.service.client.ts","webpack:///./src/app/share-history/share-history.component.css","webpack:///./src/app/share-history/share-history.component.html","webpack:///./src/app/share-history/share-history.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/noSanitize.pipe.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export class User {\r\n  username: string;\r\n  password: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  role: string;\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport {routing} from './app.routing';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { BlogSearchComponent } from './blog-search/blog-search.component';\nimport { BlogListComponent } from './blog-list/blog-list.component';\nimport {BloggerApiServiceClient} from \"./services/bloggerApi.service.client\";\nimport {FormsModule} from \"@angular/forms\";\nimport { BlogInfoComponent } from './blog-info/blog-info.component';\nimport { HomeComponent } from './home/home.component';\nimport {UserServiceClient} from \"./services/user.service.client\";\nimport { ProjectHomeComponent } from './project-home/project-home.component';\nimport { CreatePostComponent } from './create-post/create-post.component';\nimport {PostServiceClient} from \"./services/post.service.client\";\nimport { PostViewComponent } from './post-view/post-view.component';\nimport { CommentsComponent } from './comments/comments.component';\nimport { CommentsListComponent } from './comments-list/comments-list.component';\nimport {CommentServiceClient} from \"./services/comment.service.client\";\nimport { PostListComponent } from './post-list/post-list.component';\nimport { SearchComponent } from './search/search.component';\nimport {NoSanitizePipe} from \"../noSanitize.pipe\";\nimport { PostEditComponent } from './post-edit/post-edit.component';\nimport {ShareServiceClient} from \"./services/share.service.client\";\nimport { ShareHistoryComponent } from './share-history/share-history.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    BlogSearchComponent,\n    BlogListComponent,\n    BlogInfoComponent,\n    HomeComponent,\n    ProjectHomeComponent,\n    CreatePostComponent,\n    PostViewComponent,\n    CommentsComponent,\n    CommentsListComponent,\n    PostListComponent,\n    SearchComponent,\n    NoSanitizePipe,\n    PostEditComponent,\n    ShareHistoryComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    routing\n  ],\n  providers: [\n    BloggerApiServiceClient,\n    UserServiceClient,\n    PostServiceClient,\n    CommentServiceClient,\n    ShareServiceClient\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\r\nimport {LoginComponent} from \"./login/login.component\";\r\nimport {RegisterComponent} from \"./register/register.component\";\r\nimport {ProfileComponent} from \"./profile/profile.component\";\r\nimport {BlogSearchComponent} from \"./blog-search/blog-search.component\";\r\nimport {BlogListComponent} from \"./blog-list/blog-list.component\";\r\nimport {BlogInfoComponent} from \"./blog-info/blog-info.component\";\r\nimport {HomeComponent} from \"./home/home.component\";\r\nimport {ProjectHomeComponent} from \"./project-home/project-home.component\";\r\nimport {CreatePostComponent} from \"./create-post/create-post.component\";\r\nimport {PostViewComponent} from \"./post-view/post-view.component\";\r\nimport {PostListComponent} from \"./post-list/post-list.component\";\r\nimport {SearchComponent} from \"./search/search.component\";\r\nimport {PostEditComponent} from \"./post-edit/post-edit.component\";\r\nimport {ShareHistoryComponent} from \"./share-history/share-history.component\";\r\nconst appRoutes: Routes = [\r\n  {path: '', component: HomeComponent, pathMatch: 'full'},\r\n  {path: 'home', component: ProjectHomeComponent},\r\n  {path: 'blog-list', component: BlogListComponent},\r\n  {path: 'blog-search', component: BlogSearchComponent},\r\n  {path: 'createPost', component: CreatePostComponent},\r\n  {path: 'editPost/:id', component: PostEditComponent},\r\n  {path: 'viewPost/:id', component: PostViewComponent},\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'register', component: RegisterComponent},\r\n  {path: 'profile', component: ProfileComponent},\r\n  {path: 'blog-info/:id', component: BlogInfoComponent},\r\n  {path: 'viewPosts/:id', component: PostListComponent},\r\n  {path: 'search', component: SearchComponent},\r\n  {path: 'shares/:id', component: ShareHistoryComponent}\r\n];\r\nexport const routing = RouterModule.forRoot(appRoutes);\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <img src=\\\"https://api.tumblr.com/v2/blog/{{info.name}}/avatar/128\\\"/>\\n    <h1 class=\\\"ml-5 text-center align-text-bottom\\\">About {{info.title}}</h1>\\n  </div>\\n\\n\\n\\n  <table class=\\\"table mt-5 mb-3\\\">\\n    <tr>\\n      <td>\\n        Description:\\n      </td>\\n      <td [innerHtml]=\\\"info.description | noSanitize\\\"></td>\\n    </tr>\\n    <tr>\\n      <td>\\n        Post Count:\\n      </td>\\n      <td>\\n        {{info.posts}}\\n      </td>\\n    </tr>\\n    <tr>\\n      <td>\\n        Allows Questions?\\n      </td>\\n      <td>\\n        {{info.ask}}\\n      </td>\\n    </tr>\\n    <tr>\\n      <td>\\n        Allows Anonymous Questions?\\n      </td>\\n      <td>\\n        {{info.ask_anon}}\\n      </td>\\n    </tr>\\n    <tr>\\n      <td>\\n        Link to the Blog:\\n      </td>\\n      <td>\\n        <a href=\\\"{{info.url}}\\\">{{info.url}}</a>\\n      </td>\\n    </tr>\\n  </table>\\n\\n  <h3>Recent Posts</h3>\\n  <table class=\\\"table\\\">\\n    <tr>\\n      <th>\\n        Summary\\n      </th>\\n      <th>\\n        Link to Post\\n      </th>\\n      <th>\\n        Type\\n      </th>\\n    </tr>\\n    <tr *ngFor=\\\"let post of posts\\\">\\n      <td>\\n        {{post.summary}}\\n      </td>\\n      <td>\\n        <a href=\\\"{{post.post_url}}\\\">{{post.post_url}}</a>\\n      </td>\\n      <td>\\n        {{post.type}}\\n      </td>\\n    </tr>\\n  </table>\\n\\n  <button class=\\\"btn btn-info\\\" (click)=\\\"goBack()\\\">Go Back</button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {BloggerApiServiceClient} from \"../services/bloggerApi.service.client\";\n\n@Component({\n  selector: 'app-blog-info',\n  templateUrl: './blog-info.component.html',\n  styleUrls: ['./blog-info.component.css']\n})\nexport class BlogInfoComponent implements OnInit {\n\n  info;\n  blogName;\n  posts = [];\n\n  constructor(private router:ActivatedRoute,\n              private blogService:BloggerApiServiceClient) { }\n\n  ngOnInit() {\n    this.router.params.subscribe(params => this.getBlogInfo(params['id']));\n  }\n\n  getBlogInfo(id) {\n    this.blogName = id;\n    this.blogService.findBlogInfo(id)\n      .then(info => this.info = info.response.blog);\n    this.blogService.findRecentBlogPosts(this.blogName)\n      .then(posts => this.posts = posts.response.posts);\n  }\n\n  goBack() {\n    parent.history.go(-1);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <app-blog-search></app-blog-search>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-blog-list',\n  templateUrl: './blog-list.component.html',\n  styleUrls: ['./blog-list.component.css']\n})\nexport class BlogListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form>\\r\\n  <div class=\\\"form-group row\\\">\\r\\n    <label for=\\\"topic\\\" class=\\\"col-sm-2 col-form-label\\\">Topic Search</label>\\r\\n    <input [(ngModel)]=\\\"keyword\\\" name=\\\"topic\\\" type=\\\"text\\\" class=\\\"form-control col-sm-5\\\" id=\\\"topic\\\" aria-describedby=\\\"topic\\\" placeholder=\\\"Search for something that interests you!\\\">\\r\\n    <label for=\\\"numResults\\\" class=\\\"col-sm-2 col-form-label\\\">Number Of Results</label>\\r\\n    <select [(ngModel)]=\\\"limit\\\" id=\\\"numResults\\\" name=\\\"numResults\\\" class=\\\"form-control col-sm-1 mr-2\\\">\\r\\n      <option value=\\\"1\\\">1</option>\\r\\n      <option value=\\\"2\\\">2</option>\\r\\n      <option value=\\\"3\\\">3</option>\\r\\n      <option value=\\\"4\\\">4</option>\\r\\n      <option value=\\\"5\\\">5</option>\\r\\n      <option value=\\\"6\\\">6</option>\\r\\n      <option value=\\\"7\\\">7</option>\\r\\n      <option value=\\\"8\\\">8</option>\\r\\n      <option value=\\\"9\\\">9</option>\\r\\n      <option value=\\\"10\\\">10</option>\\r\\n      <option value=\\\"11\\\">11</option>\\r\\n      <option value=\\\"12\\\">12</option>\\r\\n      <option value=\\\"13\\\">13</option>\\r\\n      <option value=\\\"14\\\">14</option>\\r\\n      <option value=\\\"15\\\">15</option>\\r\\n      <option value=\\\"16\\\">16</option>\\r\\n      <option value=\\\"17\\\">17</option>\\r\\n      <option value=\\\"18\\\">18</option>\\r\\n      <option value=\\\"19\\\">19</option>\\r\\n      <option value=\\\"20\\\">20</option>\\r\\n    </select>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"searchPostsByTag(keyword, limit)\\\" class=\\\"btn btn-primary\\\">Search</button>\\r\\n  </div>\\r\\n</form>\\r\\n<div *ngIf=\\\"blogs.length > 0; else noResults\\\">\\r\\n  <h3>Blog Results ({{blogs.length}})</h3>\\r\\n  <table class=\\\"table table-striped\\\">\\r\\n    <thead>\\r\\n    <tr>\\r\\n      <th scope=\\\"col\\\"></th>\\r\\n      <th scope=\\\"col\\\">Blog Name</th>\\r\\n      <th scope=\\\"col\\\">Summary</th>\\r\\n      <th scope=\\\"col\\\">Link to Tumblr</th>\\r\\n    </tr>\\r\\n    </thead>\\r\\n    <tr *ngFor=\\\"let blog of blogs\\\">\\r\\n      <td><button class=\\\"btn btn-info\\\" (click)=\\\"viewBlogInfo(blog.blog_name)\\\">View Blog Info</button></td>\\r\\n      <td>{{blog.blog_name}}</td>\\r\\n      <td>{{blog.summary}}</td>\\r\\n      <td><a href=\\\"{{blog.post_url}}\\\">{{blog.post_url}}</a></td>\\r\\n    </tr>\\r\\n  </table>\\r\\n</div>\\r\\n\\r\\n<ng-template #noResults>\\r\\n  No results found\\r\\n</ng-template>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {BloggerApiServiceClient} from \"../services/bloggerApi.service.client\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-blog-search',\r\n  templateUrl: './blog-search.component.html',\r\n  styleUrls: ['./blog-search.component.css']\r\n})\r\nexport class BlogSearchComponent implements OnInit {\r\n\r\n  keyword;\r\n  blogs = [];\r\n  limit;\r\n\r\n  constructor(private blogService:BloggerApiServiceClient,\r\n              private router:Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  searchPostsByTag(keyword, limit) {\r\n      this.blogService.findPostsBySearchCriteria(keyword, limit)\r\n        .then(response => this.blogs = response.response);\r\n  }\r\n\r\n  viewBlogInfo(blogName) {\r\n    this.router.navigateByUrl('/blog-info/'+blogName);\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid mt-6\\\" *ngIf=\\\"comments.length > 0; else noComment\\\">\\n  <span class=\\\"font-weight-bold mb-2\\\">Total Comments: {{comments.length}}</span>\\n  <table class=\\\"table table-borderless table-striped\\\">\\n    <tr class=\\\"text-center\\\">\\n      <th>Name</th>\\n      <th>Comment</th>\\n      <th>Date</th>\\n    </tr>\\n    <tr class=\\\"text-center\\\" *ngFor=\\\"let comment of comments\\\">\\n      <td>\\n        {{comment.username}}\\n        <span>\\n          <i class=\\\"fa fa-edit mr-2 ml-2\\\" (click)=\\\"editComment(comment)\\\" [hidden]=\\\"viewEdit(comment)\\\"></i>\\n          <i class=\\\"fa fa-trash\\\" (click)=\\\"deleteComment(comment)\\\" [hidden]=\\\"viewDelete(comment)\\\"></i>\\n        </span>\\n      </td>\\n      <td>\\n        <span [hidden]=\\\"this.edit\\\">{{comment.comment}}</span>\\n        <span [hidden]=\\\"!this.edit\\\"><input [(ngModel)]=\\\"comment.comment\\\" class=\\\"form-control-sm mr-2\\\"/>\\n          <i class=\\\"fa fa-save\\\" (click)=\\\"updateComment(comment)\\\"></i>\\n        </span>\\n      </td>\\n      <td>\\n        {{comment.dateCreate | date:'medium'}}\\n      </td>\\n    </tr>\\n  </table>\\n</div>\\n<ng-template #noComment class=\\\"container-fluid mt-6\\\">\\n  There are no comments on this post. Be the first to make one!\\n</ng-template>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {CommentServiceClient} from \"../services/comment.service.client\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {UserServiceClient} from \"../services/user.service.client\";\nimport {User} from \"../models/user.model\";\n\n@Component({\n  selector: 'app-comments-list',\n  templateUrl: './comments-list.component.html',\n  styleUrls: ['./comments-list.component.css']\n})\nexport class CommentsListComponent implements OnInit {\n\n  comments = [];\n  postId = '';\n  edit = false;\n  user:User = new User();\n\n  constructor(private service:CommentServiceClient,\n              private activatedRoute:ActivatedRoute,\n              private userService:UserServiceClient) {\n    this.activatedRoute.params.subscribe((params) => this.setParams(params));\n  }\n\n  ngOnInit() {\n  }\n\n  setParams(params) {\n    this.postId = params['id'];\n    this.findCommentsByPostId();\n    this.getUserFromSession();\n  }\n\n  deleteComment(comment) {\n    this.service.deleteComment(comment)\n      .then((response) => {\n        if (response.error) {\n          console.log(response.error);\n        }\n        this.findCommentsByPostId();\n        window.location.reload();\n      });\n  }\n\n  editComment(comment) {\n    this.edit = true;\n  }\n\n  updateComment(comment) {\n    this.service.editComment(comment)\n      .then((response) => {\n        if (response.error) {\n          console.log(response.error);\n        }\n        this.findCommentsByPostId();\n        window.location.reload();\n      })\n\n  }\n\n  findCommentsByPostId() {\n    this.service.findCommentsByPost(this.postId)\n      .then((comments) => this.comments = comments);\n\n  }\n\n  getUserFromSession() {\n    this.userService.getCurrentUserSession()\n      .then( user => {\n        this.user = user;\n      });\n  }\n\n  //if user created the comment, the user can edit it\n  viewEdit(comment) {\n    if (comment.username === this.user.username) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  //if user created the comment or is an admin,\n  //the user can delete the comment\n  viewDelete(comment) {\n    if (comment.username == this.user.username || this.user.role === 'admin') {\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"mt-4\\\">\\n  <span class=\\\"label-warning\\\">Enter your comment here. Please note your comment may be removed for moderation purposes.</span><br/>\\n  <small id=\\\"notLoggedin\\\" class=\\\"text-danger\\\" [hidden]=\\\"this.isLoggedIn\\\">\\n    You must be logged into comment. Log in <a routerLink=\\\"/login\\\">here</a>\\n  </small>\\n  <textarea [disabled]=\\\"!isLoggedIn\\\" class=\\\"form-control\\\" rows=\\\"5\\\" cols=\\\"50\\\" [(ngModel)]=\\\"comment.comment\\\"></textarea>\\n  <span class=\\\"row pull-right mt-3 mb-3\\\">\\n    <button class=\\\"btn btn-danger mr-2\\\" (click)=\\\"clearComment()\\\" [disabled]=\\\"!isLoggedIn\\\"><i class=\\\"fa fa-ban\\\"></i></button>\\n    <button class=\\\"btn btn-success mr-2\\\" (click)=\\\"addComment()\\\" [disabled]=\\\"!isLoggedIn\\\"><i class=\\\"fa fa-plus-circle\\\"></i></button>\\n  </span><br/><br/>\\n  <app-comments-list></app-comments-list>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Comment} from '../models/comment.model';\nimport {CommentServiceClient} from \"../services/comment.service.client\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {UserServiceClient} from \"../services/user.service.client\";\n\n@Component({\n  selector: 'app-comments',\n  templateUrl: './comments.component.html',\n  styleUrls: ['./comments.component.css']\n})\nexport class CommentsComponent implements OnInit {\n\n  comment = new Comment();\n  isLoggedIn = false;\n\n  constructor(private service:CommentServiceClient,\n              private router:Router,\n              private activatedRoute:ActivatedRoute,\n              private userService:UserServiceClient) {\n    this.activatedRoute.params.subscribe((params) => this.setPostId(params));\n  }\n\n  ngOnInit() {\n  }\n\n  setPostId(params) {\n    this.comment.postId = params['id'];\n    this.userService.getCurrentUserSession()\n      .then(user => {\n        if (user.username) {\n          this.isLoggedIn = true;\n        }\n      })\n  }\n\n  clearComment() {\n    this.comment.comment = '';\n  }\n\n  addComment() {\n    this.service.createComment(this.comment)\n      .then(() => {\n        this.clearComment();\n        window.location.reload();\n      });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Create a New Blog Post</h1>\\n\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"form-control-sm\\\">\\n      Title\\n    </label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"post.postTitle\\\" class=\\\"form-control-sm\\\"/>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"form-control-sm\\\">\\n      Topic\\n    </label>\\n    <select [(ngModel)]=\\\"post.topic\\\" name=\\\"topic\\\" id=\\\"topic\\\" class=\\\"form-control-sm\\\">\\n      <option *ngFor=\\\"let topic of topicList\\\" [ngValue]=\\\"topic\\\">{{topic}}</option>\\n    </select>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"form-control-sm\\\">\\n      Write your content below:\\n    </label>\\n    <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"post.postContent\\\" rows=\\\"15\\\" cols=\\\"50\\\"></textarea>\\n  </div>\\n\\n\\n  <div class=\\\"row mt-4\\\">\\n    <button class=\\\"btn btn-danger mr-2\\\" (click)=\\\"deleteDraft()\\\">\\n      Discard\\n    </button>\\n    <button class=\\\"btn btn-success mr-2\\\" (click)=\\\"saveDraft()\\\">\\n      Save\\n    </button>\\n    <button class=\\\"btn btn-success\\\" (click)=\\\"publishPost()\\\">\\n      Publish\\n    </button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {PostServiceClient} from \"../services/post.service.client\";\r\nimport {Post} from \"../models/post.model\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-create-post',\r\n  templateUrl: './create-post.component.html',\r\n  styleUrls: ['./create-post.component.css']\r\n})\r\nexport class CreatePostComponent implements OnInit {\r\n\r\n  post = new Post();\r\n\r\n  //list of acceptable topics\r\n  topicList = [\r\n    'Science',\r\n    'Sports',\r\n    'Politics',\r\n    'Nature',\r\n    'Shopping',\r\n    'Recipes',\r\n    'Travel',\r\n    'Other'\r\n  ];\r\n  constructor(private service:PostServiceClient,\r\n              private router:Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  deleteDraft() {\r\n    if(confirm('Continuing will delete your draft and you will be unable to return to make edits. Continue?')) {\r\n      if (this.post._id) {\r\n        this.service.deletePost(this.post)\r\n      }\r\n      this.router.navigateByUrl('/home');\r\n    }\r\n  }\r\n\r\n  saveDraft() {\r\n    this.post.published = false;\r\n\r\n    //if an id exists, the post already exists in the database\r\n    //this means an update should be done rather than post\r\n    if (this.post._id) {\r\n      //update\r\n    } else {\r\n      this.service.createPost(this.post)\r\n        .then((response) => {\r\n          console.log(response);\r\n          alert('Your draft has been saved!')\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n  publishPost() {\r\n    if(confirm('Continuing will make your content viewable to others. Continue?')) {\r\n      this.post.published = true;\r\n      this.service.createPost(this.post)\r\n        .then((response) => {\r\n          console.log(response);\r\n          alert('Your post has been published!');\r\n          this.router.navigateByUrl('/viewPost/'+response._id);\r\n        })\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid text-center\\\">\\n  <h1>Welcome to Lexi's CS5610 Home Page!</h1>\\n  <p>Below you will find all of the work I did for CS 5610 (Web Development) at Northeastern University. </p>\\n\\n  <img src=\\\"assets/picture.jpg\\\" class=\\\"center-block mb-4\\\"/>\\n\\n  <h3>Project</h3>\\n  <p>\\n    To proceed directly to my course project, which creates a blogging website, please click\\n    <a routerLink=\\\"/home\\\">here</a>. In this project, you can create an account and find or write your own posts. Watch the video to see\\n    a demo of the project.\\n  </p>\\n\\n  <iframe [src]=\\\"safeUrl\\\" frameborder=\\\"0\\\" allowfullscreen></iframe>\\n\\n\\n  <div class=\\\"row mb-4\\\">\\n    <div class=\\\"col\\\">\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item active\\\">\\n          Github Repositories\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <a href=\\\"https://github.com/lkacoy/webdev-summer-2018-java-server-akacoyannakis\\\">Java Server</a>\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <a href=\\\"https://github.com/lkacoy/webdev-summer2018-client-react-akacoyannakis\\\">React Client</a>\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <a href=\\\"https://github.com/lkacoy/cs5610-react-native\\\">React Native</a>\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <a href=\\\"https://github.com/lkacoy/webdev-summer2018-angular\\\">Angular Client</a>\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <a href=\\\"https://github.com/lkacoy/webdev-summer2018-node\\\">Node Server</a>\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <a href=\\\"https://github.com/lkacoy/webdev-cs5610-project-angular\\\">Project - Angular Client</a>\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <a href=\\\"https://github.com/lkacoy/webdev-cs5610-project\\\">Project - Node Server</a>\\n        </li>\\n      </ul>\\n    </div>\\n\\n    <div class=\\\"col\\\">\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item active\\\">\\n          Heroku Instances\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <a href=\\\"https://web2018-lexikacoyannakis.herokuapp.com/\\\">Java Server</a>\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <a href=\\\"https://web2018-react-lexikacoyannakis.herokuapp.com/\\\">React Client</a>\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <a href=\\\"https://angular-lexikacoyannakis.herokuapp.com/\\\">Angular Client</a>\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <a href=\\\"https://node-lexikacoyannakis.herokuapp.com/\\\">Node Server</a>\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <a href=\\\"https://cs5610project-angular-lexi.herokuapp.com/\\\">Project - Angular Client</a>\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <a href=\\\"https://cs5610project-node-lexi.herokuapp.com/\\\">Project - Node Server</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {DomSanitizer} from \"@angular/platform-browser\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  safeUrl;\n\n  constructor(private _sanitizer: DomSanitizer) {\n    let url = 'https://www.youtube.com/embed/DV_3qx-oBms';\n    this.safeUrl = this._sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Login</h1>\\n\\n  <input [(ngModel)]=\\\"username\\\"\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control mb-2 mt-4\\\"/>\\n  <input [(ngModel)]=\\\"password\\\"\\n         placeholder=\\\"password\\\"\\n         type=\\\"password\\\"\\n         class=\\\"form-control mb-2\\\"/>\\n  <small id=\\\"loginError\\\" class=\\\"text-danger\\\" [hidden]=\\\"!this.loginError\\\">\\n    Login was unsuccessful. Please try again.\\n  </small>\\n  <button (click)=\\\"login(username, password)\\\"\\n          class=\\\"btn btn-primary btn-block mt-4\\\">\\n    Login\\n  </button>\\n\\n  <small id=\\\"register\\\" class=\\\"form-text text-muted\\\">\\n    Don't have an account? <a routerLink=\\\"/register\\\">Register New User</a>\\n  </small>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Route, Router} from \"@angular/router\";\nimport {UserServiceClient} from \"../services/user.service.client\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username;\n  password;\n  loginError:boolean = false;\n\n  login(username, password) {\n    console.log([username, password]);\n    this.service\n      .login(username, password)\n      .then((response) => {\n        if (response && response.error) {\n          this.loginError = true;\n        } else {\n          this.loginError = false;\n          this.router.navigate(['profile']);\n        }\n      });\n  }\n\n  constructor(private router: Router,\n              private service: UserServiceClient) { }\n\n  ngOnInit() {\n  }\n\n}\n","export class Comment {\r\n  id: number;\r\n  comment: string;\r\n  postId: number;\r\n  username: string;\r\n  dateCreate: string;\r\n}\r\n","export class Post {\r\n  _id: number;\r\n  username: string;\r\n  postTitle: string;\r\n  postContent: string;\r\n  published: boolean;\r\n  datePublished: string; //must be string and then can format in component.\r\n  dateCreated: string;\r\n  topic: string;\r\n}\r\n","export class Share {\r\n  id: number;\r\n  username: string;\r\n  postId: number;\r\n  postName: string;\r\n  dateShared: string;\r\n  author: string;\r\n}\r\n","export class User {\r\n  id: number;\r\n  username: string;\r\n  password: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  role: string;\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Edit Post</h1>\\n\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"form-control-sm\\\">\\n      Title\\n    </label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"post.postTitle\\\" class=\\\"form-control-sm\\\"/>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"form-control-sm\\\">\\n      Topic\\n    </label>\\n    <select [(ngModel)]=\\\"post.topic\\\" name=\\\"topic\\\" id=\\\"topic\\\" class=\\\"form-control-sm\\\">\\n      <option *ngFor=\\\"let topic of topicList\\\" [ngValue]=\\\"topic\\\">{{topic}}</option>\\n    </select>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"form-control-sm\\\">\\n      Write your content below:\\n    </label>\\n    <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"post.postContent\\\" rows=\\\"15\\\" cols=\\\"50\\\"></textarea>\\n  </div>\\n\\n\\n  <div class=\\\"row mt-4\\\">\\n    <button class=\\\"btn btn-danger mr-2\\\" (click)=\\\"deleteDraft()\\\">\\n      Discard\\n    </button>\\n    <button class=\\\"btn btn-success mr-2\\\" (click)=\\\"updatePost()\\\">\\n      Update Post\\n    </button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {PostServiceClient} from \"../services/post.service.client\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {Post} from \"../models/post.model\";\n\n@Component({\n  selector: 'app-post-edit',\n  templateUrl: './post-edit.component.html',\n  styleUrls: ['./post-edit.component.css']\n})\nexport class PostEditComponent implements OnInit {\n\n  post:Post = new Post();\n  postId;\n  //list of acceptable topics\n  topicList = [\n    'Science',\n    'Sports',\n    'Politics',\n    'Nature',\n    'Shopping',\n    'Recipes',\n    'Travel',\n    'Other'\n  ];\n\n  constructor(private service:PostServiceClient,\n              private activatedRoute:ActivatedRoute,\n              private router:Router) {\n    this.activatedRoute.params.subscribe(params => this.setParams(params));\n  }\n\n  ngOnInit() {\n  }\n\n  setParams(params) {\n    this.postId = params['id'];\n    this.service.findPostById(this.postId)\n      .then(post =>\n        this.post = post[0]\n      );\n  }\n\n  deleteDraft() {\n    if(confirm('Continuing will delete your draft and your post will not be updated. Continue?')) {\n      this.router.navigateByUrl('/home');\n    }\n  }\n\n  updatePost() {\n    if(confirm('Are you sure you want to update your post?')) {\n      this.service.updatePost(this.post)\n        .then( () => {\n          this.router.navigateByUrl('/viewPost/' + this.postId);\n        });\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Posts By {{username}}</h1>\\n\\n  <p>Total Posts Created: {{posts.length}}</p>\\n\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item active\\\">Posts</li>\\n    <li *ngFor=\\\"let post of posts\\\" class=\\\"list-group-item wbdv\\\">\\n      <a routerLink=\\\"/viewPost/{{post._id}}\\\">\\n        {{post.postTitle}}</a>\\n      <span class=\\\"pull-right\\\" *ngIf=\\\"post.published == true\\\">Published: {{post.datePublished | date: 'short'}}</span>\\n      <span class=\\\"pull-right\\\" *ngIf=\\\"post.published == false\\\">Draft Saved: {{post.datePublished | date: 'short'}}</span>\\n    </li>\\n  </ul>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Post} from \"../models/post.model\";\nimport {PostServiceClient} from \"../services/post.service.client\";\n\n@Component({\n  selector: 'app-post-list',\n  templateUrl: './post-list.component.html',\n  styleUrls: ['./post-list.component.css']\n})\nexport class PostListComponent implements OnInit {\n\n  username;\n  posts: Post[] = [];\n\n  constructor(private activatedRoute:ActivatedRoute,\n              private service:PostServiceClient) {\n    this.activatedRoute.params.subscribe((params) => this.setParams(params));\n  }\n\n  ngOnInit() {\n  }\n\n  setParams(params) {\n    this.username = params['id'];\n    this.service.findPostsForUser(this.username)\n      .then((posts) => this.posts = posts);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>{{post.postTitle}}</h1>\\n  <h4>Written by: {{post.username}}</h4>\\n\\n\\n  <span class=\\\"font-weight-bold\\\">Published On:</span> {{post.datePublished | date: 'medium'}}\\n  <span class=\\\"font-weight-bold\\\">Number Of Shares:</span> {{shares.length}}\\n  <i class=\\\"fa fa-share-square-o btn btn-primary ml-4\\\" (click)=\\\"sharePost()\\\"></i>\\n  <span class=\\\"pull-right\\\" [hidden]=\\\"!isPostWriter\\\">\\n    <i class=\\\"fa fa-edit mr-2 ml-2 btn btn-primary\\\" (click)=\\\"editPost()\\\"></i>\\n    <i class=\\\"fa fa-trash btn btn-danger\\\" (click)=\\\"deletePost()\\\"></i>\\n  </span>\\n  <p class=\\\"mt-4\\\">{{post.postContent}}</p>\\n\\n  <p>Topic: {{post.topic}}</p>\\n  <app-comments></app-comments>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {PostServiceClient} from \"../services/post.service.client\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {Post} from \"../models/post.model\";\r\nimport {UserServiceClient} from \"../services/user.service.client\";\r\nimport {User} from \"../models/user.model\";\r\nimport {ShareServiceClient} from \"../services/share.service.client\";\r\nimport {Share} from \"../models/share.model\";\r\n\r\n@Component({\r\n  selector: 'app-post-view',\r\n  templateUrl: './post-view.component.html',\r\n  styleUrls: ['./post-view.component.css']\r\n})\r\nexport class PostViewComponent implements OnInit {\r\n\r\n  postId;\r\n  post = new Post();\r\n  isPostWriter = false;\r\n  isLoggedIn = false;\r\n  user:User = new User();\r\n  share:Share = new Share();\r\n  shares:Share[] =  [];\r\n\r\n  constructor(private service:PostServiceClient,\r\n              private activatedRoute:ActivatedRoute,\r\n              private userService:UserServiceClient,\r\n              private shareService:ShareServiceClient,\r\n              private router:Router) {\r\n    this.activatedRoute.params.subscribe((params) => this.setParams(params));\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  setParams(params) {\r\n   this.postId = params['id'];\r\n   this.service.findPostById(this.postId)\r\n     .then(post => {\r\n       this.post = post[0];\r\n       this.verifyRole();\r\n     });\r\n   this.retrieveSharesForPost();\r\n  }\r\n\r\n  editPost() {\r\n    this.router.navigateByUrl('/editPost/' + this.postId);\r\n  }\r\n\r\n  deletePost() {\r\n    if (confirm('Are you sure you wish to delete this post?')) {\r\n      this.service.deletePost(this.post)\r\n        .then( response => {\r\n          this.router.navigateByUrl('/home');\r\n        })\r\n    }\r\n  }\r\n\r\n  // post can only be edited and deleted by the writer\r\n  verifyRole() {\r\n    this.userService.getCurrentUserSession()\r\n      .then(response => {\r\n\r\n        if (response.username) {\r\n          this.isLoggedIn = true;\r\n          this.user = response;\r\n        } else {\r\n          this.isLoggedIn = false;\r\n        }\r\n\r\n        if (response.username === this.post.username) {\r\n\r\n          this.isPostWriter = true;\r\n        }\r\n        else {\r\n          this.isPostWriter = false;\r\n        }\r\n      })\r\n  }\r\n\r\n  sharePost() {\r\n    this.share.username = this.user.username;\r\n    this.share.postId = this.postId;\r\n    this.share.postName = this.post.postTitle;\r\n    this.share.author = this.post.username;\r\n\r\n    this.shareService.createShare(this.share)\r\n      .then( share => {\r\n        alert(\"You\\'ve shared this post!\");\r\n        window.location.reload();\r\n      });\r\n  }\r\n\r\n  retrieveSharesForPost() {\r\n    this.shareService.findSharesForPost(this.postId)\r\n      .then(shares => this.shares = shares);\r\n\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Profile</h1>\\n\\n  <input [(ngModel)]=\\\"username\\\"\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"firstName\\\"\\n         placeholder=\\\"first name\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"lastName\\\"\\n         placeholder=\\\"lastName\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"email\\\"\\n         placeholder=\\\"email\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"role\\\" class=\\\"form-control\\\" readonly=\\\"{{role==='admin'}}\\\"/>\\n  <button (click)=\\\"update()\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Update\\n  </button>\\n  <button (click)=\\\"delete()\\\"\\n          class=\\\"btn btn-block btn-danger\\\">\\n    Delete Account\\n  </button>\\n\\n  <a (click)=\\\"logout()\\\">Logout</a>\\n  <a routerLink=\\\"/home\\\" class=\\\"ml-2\\\">Home</a>\\n  <a routerLink=\\\"/createPost\\\" class=\\\"ml-2\\\" [hidden]=\\\"checkRole()\\\">Create Post</a>\\n  <a routerLink=\\\"/viewPosts/{{username}}\\\" class=\\\"ml-2\\\" [hidden]=\\\"checkRole()\\\">View My Posts</a>\\n  <a routerLink=\\\"/shares/{{username}}\\\" class=\\\"ml-2\\\" [hidden]=\\\"canSharePost()\\\">View Shared Posts</a>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {UserServiceClient} from \"../services/user.service.client\";\nimport {User} from \"../../../../webdev-summer2018-angular/src/app/models/user.model.client\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  user:User = new User();\n  username;\n  password;\n  email;\n  firstName;\n  lastName;\n  role;\n  isAdmin:boolean = false;\n\n  constructor(private service: UserServiceClient,\n              private router:Router) { }\n\n  ngOnInit() {\n\n    this.service\n      .profile()\n      .then(user => {\n        this.username = user.username;\n        this.email  = user.email;\n        this.firstName = user.firstName;\n        this.lastName = user.lastName;\n        this.role = user.role;\n        if (user.role === 'admin') this.isAdmin = true;\n      });\n  }\n\n\n  update() {\n    this.user.username = this.username;\n    this.user.password = this.password;\n    this.user.email = this.email;\n    this.user.firstName = this.firstName;\n    this.user.lastName = this.lastName;\n    this.user.role = this.role;\n    this.service.updateUser(this.user)\n      .then(user => {\n        this.user = user;\n        this.router.navigateByUrl('/profile');\n      });\n  }\n\n  logout() {\n    this.service\n      .logout()\n      .then(() =>\n        this.router.navigate(['login']));\n\n  }\n\n  delete() {\n    if (confirm('Continuing will delete your account permanently. Are you sure you wish to continue?')) {\n      this.service.deleteUser(this.username).then( () =>\n        this.router.navigateByUrl('/login')\n      );\n    }\n  }\n\n  checkRole() {\n    if (this.role !== 'blogWriter') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  canSharePost() {\n    if (this.role !== 'blogWriter' && this.role !== 'blogFollower') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid text-center\\\">\\n  <h1>Welcome to Blogger Central!</h1>\\n  <h3>Find and create blogs!</h3>\\n\\n  <p>Interested in finding some inspiration before creating your own? <a routerLink=\\\"/blog-list\\\">Search some blogs from Tumblr here!</a></p>\\n\\n  <a class=\\\"btn btn-info mb-4\\\" routerLink=\\\"/search\\\">Search For Posts</a> <br/>\\n\\n  <div class=\\\"row mb-3\\\">\\n    <div class=\\\"col\\\">\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item active\\\">\\n          Blog Writers\\n        </li>\\n        <li class=\\\"list-group-item\\\" *ngFor=\\\"let writer of blogWriters\\\">\\n          <a routerLink=\\\"/viewPosts/{{writer.username}}\\\">{{writer.username}}</a>\\n        </li>\\n      </ul>\\n    </div>\\n\\n    <div class=\\\"col\\\">\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item active\\\">\\n          Recent Posts\\n        </li>\\n        <li class=\\\"list-group-item\\\" *ngFor=\\\"let post of posts\\\">\\n          <a routerLink=\\\"/viewPost/{{post._id}}\\\">{{post.postTitle}}</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <span class=\\\"mr-4\\\"><a routerLink=\\\"/login\\\">Login</a></span>\\n  <span class=\\\"mr-4\\\"><a routerLink=\\\"/register\\\">Create New Account</a></span>\\n  <span><a routerLink=\\\"/\\\">Course Home Page</a></span>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {UserServiceClient} from \"../services/user.service.client\";\nimport {PostServiceClient} from \"../services/post.service.client\";\n\n@Component({\n  selector: 'app-project-home',\n  templateUrl: './project-home.component.html',\n  styleUrls: ['./project-home.component.css']\n})\nexport class ProjectHomeComponent implements OnInit {\n\n  blogWriters = [];\n  posts = [];\n\n  constructor(private userService: UserServiceClient,\n              private postService: PostServiceClient) {\n    this.userService.findBlogWriters()\n      .then(blogWriters => this.blogWriters = blogWriters);\n    this.postService.findAllPosts()\n      .then(posts => {\n        if (posts.length > 0) {\n          posts.forEach( (post) => {\n            if (post.published == true) {\n              this.posts.push(post);\n            }\n          })\n        }\n      });\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Create New Account</h1>\\n  <form class=\\\"needs-validation\\\" novalidate>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"usernameInput\\\">Username</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\" required class=\\\"form-control\\\" id=\\\"usernameInput\\\" name=\\\"username\\\" aria-describedby=\\\"usernameInput\\\" placeholder=\\\"Enter username\\\">\\n      <small id=\\\"usernameRequired\\\" class=\\\"text-danger\\\">\\n        Username is required.\\n      </small>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"password\\\">Password</label>\\n      <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" (ngModelChange)=\\\"verifyPasswordMatch()\\\" required class=\\\"form-control\\\"\\n             id=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\">\\n      <small id=\\\"passwordHelp\\\" class=\\\"text-danger\\\">\\n        Password is required.\\n      </small>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <input [(ngModel)]=\\\"password2\\\" required name=\\\"password2\\\"\\n             type=\\\"password\\\"\\n             placeholder=\\\"verify password\\\"\\n             (ngModelChange)=\\\"verifyPasswordMatch()\\\"\\n             class=\\\"form-control mb-2\\\"/>\\n      <small id=\\\"passwordMatch\\\" class=\\\"text-danger\\\" [hidden]=\\\"!this.passwordNotMatch\\\">\\n        Passwords do not match.\\n      </small>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"firstName\\\">First Name</label>\\n      <input [(ngModel)]=\\\"firstName\\\" type=\\\"text\\\" required class=\\\"form-control\\\" id=\\\"firstName\\\" name=\\\"firstName\\\" placeHolder=\\\"First Name\\\">\\n      <small id=\\\"firstNameRequired\\\" class=\\\"text-danger\\\">\\n        First Name is required.\\n      </small>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"lastName\\\">Last Name</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"lastName\\\" required class=\\\"form-control\\\" id=\\\"lastName\\\" name=\\\"lastName\\\" placeholder=\\\"Last Name\\\">\\n      <small id=\\\"lastNameRequired\\\" class=\\\"text-danger\\\">\\n        Last Name is required.\\n      </small>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"email\\\">Email</label>\\n      <input type=\\\"email\\\" [(ngModel)]=\\\"email\\\" required class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Email Address\\\">\\n      <small id=\\\"emailRequired\\\" class=\\\"text-danger\\\">\\n        Email address is required.\\n      </small>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"role\\\">User Role</label>\\n      <select [(ngModel)]=\\\"role\\\" name=\\\"role\\\" id=\\\"role\\\">\\n        <option *ngFor=\\\"let r of roleOptions\\\" [ngValue]=\\\"r.value\\\">{{r.name}}</option>\\n      </select>\\n    </div>\\n    <small id=\\\"usernameTaken\\\" class=\\\"text-danger\\\" [hidden]=\\\"!this.usernameTakenError\\\">\\n      Username has already been taken. Please try a new username.\\n    </small>\\n    <button (click)=\\\"register(username, password)\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Create New Account</button>\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {UserServiceClient} from \"../services/user.service.client\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  username;\n  password;\n  password2;\n  email;\n  firstName;\n  lastName;\n  role;\n  passwordNotMatch = false;\n  usernameTakenError = false;\n\n  roleOptions = [\n    {value:'blogFollower', name: 'Blog Follower'},\n    {value: 'blogWriter', name: 'Blog Writer'}\n  ];\n\n  constructor(private service:UserServiceClient,\n              private router:Router) { }\n\n  ngOnInit() {\n  }\n\n  verifyPasswordMatch() {\n    if (this.password && this.password !== this.password2) {\n      this.passwordNotMatch = true;\n    } else {\n      this.passwordNotMatch = false;\n    }\n    console.log(this.passwordNotMatch);\n  }\n\n  register(username, password) {\n    var user = {username: this.username, password: this.password, firstName: this.firstName, lastName: this.lastName, email: this.email,\n    role: this.role};\n    this.service\n      .createUser(user)\n      .then((response) => {\n        if (response && response.error) {\n          this.usernameTakenError = true;\n        } else {\n          this.usernameTakenError = false;\n          this.router.navigate(['profile']);\n        }\n      });\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Search Blog Posts</h1>\\n\\n  <div class=\\\"form-group row\\\">\\n    <label for=\\\"topic\\\" class=\\\"ml-2\\\">Topic Search: </label>\\n    <select [(ngModel)]=\\\"topic\\\" name=\\\"topic\\\" id=\\\"topic\\\" class=\\\"ml-2 mr-2\\\">\\n      <option [ngValue]=\\\"''\\\">Select One</option>\\n      <option *ngFor=\\\"let topic of topicList\\\" [ngValue]=\\\"topic\\\">{{topic}}</option>\\n    </select>\\n    <label for=\\\"title\\\" class=\\\"ml-2\\\">Name of Post: </label>\\n    <input [(ngModel)]=\\\"title\\\" name=\\\"title\\\" type=\\\"text\\\" class=\\\"ml-2 mr-2\\\" id=\\\"title\\\" aria-describedby=\\\"title\\\" placeholder=\\\"Post title\\\">\\n    <label for=\\\"title\\\" class=\\\"ml-2\\\">Blogger: </label>\\n    <input [(ngModel)]=\\\"username\\\" name=\\\"username\\\" type=\\\"text\\\" class=\\\"ml-2\\\" id=\\\"username\\\" aria-describedby=\\\"title\\\" placeholder=\\\"User\\\">\\n    <button class=\\\"btn btn-primary ml-4\\\"(click)=\\\"executeSearch()\\\">Search</button>\\n  </div>\\n\\n  <table class=\\\"table table-bordered table-striped\\\" *ngIf=\\\"posts.length > 0; else noResults\\\">\\n    <tr>\\n      <th>\\n        Title\\n      </th>\\n      <th>\\n        Written By\\n      </th>\\n      <th>\\n        Topic\\n      </th>\\n      <th>\\n        Published On\\n      </th>\\n    </tr>\\n    <tr *ngFor=\\\"let post of posts\\\">\\n      <td>\\n        <a routerLink=\\\"/viewPost/{{post._id}}\\\">{{post.postTitle}}</a>\\n      </td>\\n      <td>\\n        {{post.username}}\\n      </td>\\n      <td>\\n        {{post.topic}}\\n      </td>\\n      <td>\\n        {{post.datePublished | date: 'medium'}}\\n      </td>\\n    </tr>\\n  </table>\\n  <ng-template #noResults>\\n    No results found.\\n  </ng-template>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {PostServiceClient} from \"../services/post.service.client\";\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css']\r\n})\r\nexport class SearchComponent implements OnInit {\r\n\r\n  topic = '';\r\n  title = '';\r\n  username = '';\r\n  //list of acceptable topics\r\n  topicList = [\r\n    'Science',\r\n    'Sports',\r\n    'Politics',\r\n    'Nature',\r\n    'Shopping',\r\n    'Recipes',\r\n    'Travel',\r\n    'Other'\r\n  ];\r\n  posts = [];\r\n\r\n  constructor(private service:PostServiceClient) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  executeSearch() {\r\n    let query = {title: this.title, topic: this.topic, username: this.username, published: true};\r\n    console.log(query);\r\n    this.service.searchPosts(query)\r\n      .then(posts => this.posts = posts);\r\n  }\r\n\r\n}\r\n","export class BloggerApiServiceClient {\r\n  FIND_BY_TAG = 'https://api.tumblr.com/v2/tagged?tag=KEYWORD&limit=LIMIT&api_key=fe1SEpCDiutEE7EDxpcnSo3RhfLoUjUNq0d7mk2xbnW2q1uesn';\r\n  FIND_BLOG_INFO = 'https://api.tumblr.com/v2/blog/KEYWORD/info?api_key=fe1SEpCDiutEE7EDxpcnSo3RhfLoUjUNq0d7mk2xbnW2q1uesn';\r\n  FIND_AVATAR = 'https://api.tumblr.com/v2/blog/BLOGNAME/avatar/96';\r\n  FIND_RECENT_POSTS = 'https://api.tumblr.com/v2/blog/BLOGNAME/posts?api_key=fe1SEpCDiutEE7EDxpcnSo3RhfLoUjUNq0d7mk2xbnW2q1uesn';\r\n\r\n  findPostsBySearchCriteria(keyword, limit)  {\r\n    const url = this.FIND_BY_TAG.replace('KEYWORD', keyword).replace('LIMIT', limit);\r\n    return fetch(url)\r\n      .then(response => response.json());\r\n  }\r\n\r\n  findBlogInfo(id) {\r\n    const url = this.FIND_BLOG_INFO.replace('KEYWORD', id);\r\n    return fetch(url)\r\n      .then(response => response.json());\r\n\r\n  }\r\n\r\n  findBlogAvatar(blogName) {\r\n    const url = this.FIND_AVATAR.replace('BLOGNAME', blogName);\r\n    return fetch(url)\r\n      .then(response => response.json());\r\n  }\r\n\r\n  findRecentBlogPosts(blogName) {\r\n    const url = this.FIND_RECENT_POSTS.replace('BLOGNAME', blogName);\r\n    return fetch(url)\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","export class CommentServiceClient {\r\n\r\n\r\n  createComment(comment) {\r\n    return fetch('https://cs5610project-node-lexi.herokuapp.com/api/comment', {\r\n      method: 'post',\r\n      body: JSON.stringify(comment),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => response.json());\r\n  }\r\n\r\n  findCommentsByPost(postId) {\r\n    return fetch('https://cs5610project-node-lexi.herokuapp.com/api/comment/post/' + postId)\r\n      .then(response => response.json());\r\n  }\r\n\r\n  deleteComment(comment) {\r\n    return fetch('https://cs5610project-node-lexi.herokuapp.com/api/comment', {\r\n      method: 'delete',\r\n      body: JSON.stringify(comment),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => response.json());\r\n  }\r\n\r\n  editComment(comment) {\r\n    return fetch('https://cs5610project-node-lexi.herokuapp.com/api/comment', {\r\n      method: 'put',\r\n      body: JSON.stringify(comment),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => response.json());\r\n  }\r\n}\r\n","export class PostServiceClient {\r\n\r\n  createPost(post) {\r\n    return fetch('https://cs5610project-node-lexi.herokuapp.com/api/post', {\r\n      method: 'post',\r\n      body: JSON.stringify(post),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => response.json());\r\n  }\r\n\r\n  deletePost(post) {\r\n    return fetch('https://cs5610project-node-lexi.herokuapp.com/api/post', {\r\n      method:'delete',\r\n      body: JSON.stringify(post),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n\r\n  findPostById(postId) {\r\n    return fetch('https://cs5610project-node-lexi.herokuapp.com/api/post/'+postId)\r\n      .then(response => response.json());\r\n  }\r\n\r\n  findPostsForUser(username) {\r\n    return fetch('https://cs5610project-node-lexi.herokuapp.com/api/post/user/' + username)\r\n      .then(response => response.json());\r\n  }\r\n\r\n  findAllPosts() {\r\n    return fetch('https://cs5610project-node-lexi.herokuapp.com/api/post')\r\n      .then(response => response.json());\r\n  }\r\n\r\n  searchPosts(query) {\r\n    return fetch('https://cs5610project-node-lexi.herokuapp.com/api/post/search', {\r\n      method: 'post',\r\n      body: JSON.stringify(query),\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => response.json());\r\n  }\r\n\r\n  updatePost(post) {\r\n    return fetch('https://cs5610project-node-lexi.herokuapp.com/api/post', {\r\n      method: 'put',\r\n      credentials: 'include',\r\n      body: JSON.stringify(post),\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => response.json());\r\n  }\r\n}\r\n","export class ShareServiceClient {\r\n\r\n  createShare(share) {\r\n    return fetch('https://cs5610project-node-lexi.herokuapp.com/api/share', {\r\n      method: 'post',\r\n      body: JSON.stringify(share),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => response.json());\r\n  }\r\n\r\n  findSharesForPost(postId) {\r\n    return fetch('https://cs5610project-node-lexi.herokuapp.com/api/share/post/' + postId)\r\n      .then(response => response.json());\r\n\r\n  }\r\n\r\n  findSharesForUser(username) {\r\n    return fetch('https://cs5610project-node-lexi.herokuapp.com/api/share/user/' + username)\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","export class UserServiceClient {\r\n\r\n  login(username, password) {\r\n    const credentials = {\r\n      username: username,\r\n      password: password\r\n    };\r\n    return fetch('https://cs5610project-node-lexi.herokuapp.com/api/login', {\r\n      method: 'post',\r\n      body: JSON.stringify(credentials),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => {\r\n      if (response != null) {\r\n        return response.json()\r\n      }else {\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    return fetch('https://cs5610project-node-lexi.herokuapp.com/api/logout', {\r\n      method: 'post',\r\n      credentials: 'include'\r\n    });\r\n  }\r\n\r\n  profile() {\r\n    return fetch('https://cs5610project-node-lexi.herokuapp.com/api/profile',\r\n      {\r\n        credentials: 'include', // include, same-origin, *omit\r\n      })\r\n      .then(response => response.json());\r\n  }\r\n\r\n  createUser(user) {\r\n    return fetch('https://cs5610project-node-lexi.herokuapp.com/api/register', {\r\n      body: JSON.stringify(user),\r\n      credentials: 'include', // include, same-origin, *omit\r\n      method: 'post',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => {\r\n      if (response != null) {\r\n        return response.json()\r\n      }else {\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  updateUser(user) {\r\n    return fetch('https://cs5610project-node-lexi.herokuapp.com/api/profile', {\r\n      body: JSON.stringify(user),\r\n      credentials: 'include',\r\n      method: 'put',\r\n      headers:{\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => {\r\n      return response.json();\r\n    });\r\n  }\r\n\r\n  deleteUser(username) {\r\n    return fetch('https://cs5610project-node-lexi.herokuapp.com/api/profile', {\r\n      credentials: 'include',\r\n      method: 'delete',\r\n      headers:{\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => {\r\n      return response.json();\r\n    });\r\n  }\r\n\r\n  findBlogWriters() {\r\n    return fetch('https://cs5610project-node-lexi.herokuapp.com/api/blogWriter')\r\n      .then(response => response.json());\r\n  }\r\n\r\n  getCurrentUserSession() {\r\n    return fetch('https://cs5610project-node-lexi.herokuapp.com/api/session/get/currentUser', {\r\n      credentials: 'include'\r\n    })\r\n      .then(response => response.json());\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <h1>{{username}}'s Favorite Posts</h1>\\r\\n\\r\\n  <table class=\\\"table table-striped\\\" *ngIf=\\\"shares.length > 0; else noShares\\\">\\r\\n    <tr *ngFor=\\\"let share of shares\\\">\\r\\n      <td>\\r\\n        <a routerLink=\\\"/viewPost/{{share.postId}}\\\">{{share.postName}}</a>\\r\\n      </td>\\r\\n      <td>\\r\\n        {{share.author}}\\r\\n      </td>\\r\\n      <td>\\r\\n        {{share.dateShared | date: 'medium'}}\\r\\n      </td>\\r\\n    </tr>\\r\\n  </table>\\r\\n  <ng-template #noShares>\\r\\n    {{username}} has not shared any posts yet.\\r\\n  </ng-template>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {ShareServiceClient} from \"../services/share.service.client\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {Share} from \"../models/share.model\";\r\n\r\n@Component({\r\n  selector: 'app-share-history',\r\n  templateUrl: './share-history.component.html',\r\n  styleUrls: ['./share-history.component.css']\r\n})\r\nexport class ShareHistoryComponent implements OnInit {\r\n\r\n  username:string;\r\n  shares:Share[] = [];\r\n\r\n  constructor(private service:ShareServiceClient,\r\n              private activatedRoute:ActivatedRoute) {\r\n    this.activatedRoute.params.subscribe(params => this.setParams(params));\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  setParams(params) {\r\n    this.username = params['id'];\r\n    this.service.findSharesForUser(this.username)\r\n      .then(shares => this.shares = shares);\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'noSanitize' })\r\nexport class NoSanitizePipe implements PipeTransform {\r\n  constructor(private domSanitizer: DomSanitizer) {\r\n\r\n  }\r\n  transform(url: string): SafeHtml {\r\n    return this.domSanitizer.bypassSecurityTrustHtml(url);\r\n  }\r\n}\r\n"],"sourceRoot":""}