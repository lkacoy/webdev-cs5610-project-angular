{"version":3,"sources":["webpack:///../webdev-summer2018-angular/src/app/models/user.model.client.ts","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/blog-info/blog-info.component.css","webpack:///./src/app/blog-info/blog-info.component.html","webpack:///./src/app/blog-info/blog-info.component.ts","webpack:///./src/app/blog-list/blog-list.component.css","webpack:///./src/app/blog-list/blog-list.component.html","webpack:///./src/app/blog-list/blog-list.component.ts","webpack:///./src/app/blog-search/blog-search.component.css","webpack:///./src/app/blog-search/blog-search.component.html","webpack:///./src/app/blog-search/blog-search.component.ts","webpack:///./src/app/create-post/create-post.component.css","webpack:///./src/app/create-post/create-post.component.html","webpack:///./src/app/create-post/create-post.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/models/post.model.ts","webpack:///./src/app/post-view/post-view.component.css","webpack:///./src/app/post-view/post-view.component.html","webpack:///./src/app/post-view/post-view.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/project-home/project-home.component.css","webpack:///./src/app/project-home/project-home.component.html","webpack:///./src/app/project-home/project-home.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/services/bloggerApi.service.client.ts","webpack:///./src/app/services/post.service.client.ts","webpack:///./src/app/services/user.service.client.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export class User {\r\n  username: string;\r\n  password: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  role: string;\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport {routing} from './app.routing';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { BlogSearchComponent } from './blog-search/blog-search.component';\nimport { BlogListComponent } from './blog-list/blog-list.component';\nimport {BloggerApiServiceClient} from \"./services/bloggerApi.service.client\";\nimport {FormsModule} from \"@angular/forms\";\nimport { BlogInfoComponent } from './blog-info/blog-info.component';\nimport { HomeComponent } from './home/home.component';\nimport {UserServiceClient} from \"./services/user.service.client\";\nimport { ProjectHomeComponent } from './project-home/project-home.component';\nimport { CreatePostComponent } from './create-post/create-post.component';\nimport {PostServiceClient} from \"./services/post.service.client\";\nimport { PostViewComponent } from './post-view/post-view.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    BlogSearchComponent,\n    BlogListComponent,\n    BlogInfoComponent,\n    HomeComponent,\n    ProjectHomeComponent,\n    CreatePostComponent,\n    PostViewComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    routing\n  ],\n  providers: [\n    BloggerApiServiceClient,\n    UserServiceClient,\n    PostServiceClient\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\r\nimport {LoginComponent} from \"./login/login.component\";\r\nimport {RegisterComponent} from \"./register/register.component\";\r\nimport {ProfileComponent} from \"./profile/profile.component\";\r\nimport {BlogSearchComponent} from \"./blog-search/blog-search.component\";\r\nimport {BlogListComponent} from \"./blog-list/blog-list.component\";\r\nimport {BlogInfoComponent} from \"./blog-info/blog-info.component\";\r\nimport {HomeComponent} from \"./home/home.component\";\r\nimport {ProjectHomeComponent} from \"./project-home/project-home.component\";\r\nimport {CreatePostComponent} from \"./create-post/create-post.component\";\r\nimport {PostViewComponent} from \"./post-view/post-view.component\";\r\nconst appRoutes: Routes = [\r\n  {path: '', component: HomeComponent, pathMatch: 'full'},\r\n  {path: 'home', component: ProjectHomeComponent},\r\n  {path: 'blog-list', component: BlogListComponent},\r\n  {path: 'blog-search', component: BlogSearchComponent},\r\n  {path: 'createPost', component: CreatePostComponent},\r\n  {path: 'viewPost/:id', component: PostViewComponent},\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'register', component: RegisterComponent},\r\n  {path: 'profile', component: ProfileComponent},\r\n  {path: 'blog-info/:id', component: BlogInfoComponent}\r\n];\r\nexport const routing = RouterModule.forRoot(appRoutes);\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>About {{info.title}}</h1>\\n  Written by: {{info.name}} <br/>\\n  Description: {{info.description}} <br/>\\n  Post Count: {{info.posts}} <br/>\\n  Allows Questions?: {{info.ask}} <br/>\\n  Allows Anonymous Questions?: {{info.ask_anon}} <br/>\\n  Link to the Blog: <a href=\\\"{{info.url}}\\\">{{info.url}}</a><br/>\\n  <button class=\\\"btn btn-info\\\" (click)=\\\"goBack()\\\">Go Back</button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {BloggerApiServiceClient} from \"../services/bloggerApi.service.client\";\n\n@Component({\n  selector: 'app-blog-info',\n  templateUrl: './blog-info.component.html',\n  styleUrls: ['./blog-info.component.css']\n})\nexport class BlogInfoComponent implements OnInit {\n\n  info;\n  constructor(private router:ActivatedRoute,\n              private blogService:BloggerApiServiceClient) { }\n\n  ngOnInit() {\n    console.log(this.router.snapshot.params['id']);\n    console.log(this.router.snapshot.data);\n    this.router.params.subscribe(params => this.getBlogInfo(params['id']));\n  }\n\n  getBlogInfo(id) {\n    this.blogService.findBlogInfo(id)\n      .then(info => this.info = info.response.blog);\n  }\n\n  goBack() {\n    parent.history.go(-1);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <app-blog-search></app-blog-search>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-blog-list',\n  templateUrl: './blog-list.component.html',\n  styleUrls: ['./blog-list.component.css']\n})\nexport class BlogListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form>\\r\\n  <div class=\\\"form-group row\\\">\\r\\n    <label for=\\\"topic\\\" class=\\\"col-sm-2 col-form-label\\\">Topic Search</label>\\r\\n    <input [(ngModel)]=\\\"keyword\\\" name=\\\"topic\\\" type=\\\"text\\\" class=\\\"form-control col-sm-5\\\" id=\\\"topic\\\" aria-describedby=\\\"topic\\\" placeholder=\\\"Search for something that interests you!\\\">\\r\\n    <label for=\\\"numResults\\\" class=\\\"col-sm-2 col-form-label\\\">Number Of Results</label>\\r\\n    <select [(ngModel)]=\\\"limit\\\" id=\\\"numResults\\\" name=\\\"numResults\\\" class=\\\"form-control col-sm-1 mr-2\\\">\\r\\n      <option value=\\\"1\\\">1</option>\\r\\n      <option value=\\\"2\\\">2</option>\\r\\n      <option value=\\\"3\\\">3</option>\\r\\n      <option value=\\\"4\\\">4</option>\\r\\n      <option value=\\\"5\\\">5</option>\\r\\n      <option value=\\\"6\\\">6</option>\\r\\n      <option value=\\\"7\\\">7</option>\\r\\n      <option value=\\\"8\\\">8</option>\\r\\n      <option value=\\\"9\\\">9</option>\\r\\n      <option value=\\\"10\\\">10</option>\\r\\n      <option value=\\\"11\\\">11</option>\\r\\n      <option value=\\\"12\\\">12</option>\\r\\n      <option value=\\\"13\\\">13</option>\\r\\n      <option value=\\\"14\\\">14</option>\\r\\n      <option value=\\\"15\\\">15</option>\\r\\n      <option value=\\\"16\\\">16</option>\\r\\n      <option value=\\\"17\\\">17</option>\\r\\n      <option value=\\\"18\\\">18</option>\\r\\n      <option value=\\\"19\\\">19</option>\\r\\n      <option value=\\\"20\\\">20</option>\\r\\n    </select>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"searchPostsByTag(keyword, limit)\\\" class=\\\"btn btn-primary\\\">Search</button>\\r\\n  </div>\\r\\n</form>\\r\\n<h3>Blog Results ({{blogs.length}})</h3>\\r\\n<table class=\\\"table table-striped\\\">\\r\\n  <thead>\\r\\n  <tr>\\r\\n    <th scope=\\\"col\\\"></th>\\r\\n    <th scope=\\\"col\\\">Blog Name</th>\\r\\n    <th scope=\\\"col\\\">Summary</th>\\r\\n    <th scope=\\\"col\\\">Link to Tumblr</th>\\r\\n  </tr>\\r\\n  </thead>\\r\\n  <tr *ngFor=\\\"let blog of blogs\\\">\\r\\n    <td><button class=\\\"btn btn-info\\\" (click)=\\\"viewBlogInfo(blog.blog_name)\\\">View Blog Info</button></td>\\r\\n    <td>{{blog.blog_name}}</td>\\r\\n    <td>{{blog.summary}}</td>\\r\\n    <td><a href=\\\"{{blog.post_url}}\\\">{{blog.post_url}}</a></td>\\r\\n  </tr>\\r\\n</table>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {BloggerApiServiceClient} from \"../services/bloggerApi.service.client\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-blog-search',\r\n  templateUrl: './blog-search.component.html',\r\n  styleUrls: ['./blog-search.component.css']\r\n})\r\nexport class BlogSearchComponent implements OnInit {\r\n\r\n  keyword;\r\n  blogs = [];\r\n  limit;\r\n\r\n  constructor(private blogService:BloggerApiServiceClient,\r\n              private router:Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  searchPostsByTag(keyword, limit) {\r\n      this.blogService.findPostsBySearchCriteria(keyword, limit)\r\n        .then(response => this.blogs = response.response);\r\n  }\r\n\r\n  viewBlogInfo(blogName) {\r\n    this.router.navigateByUrl('/blog-info/'+blogName);\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Create a New Blog Post</h1>\\n\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"form-control-sm\\\">\\n      Title\\n    </label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"post.postTitle\\\" class=\\\"form-control-sm\\\"/>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"form-control-sm\\\">\\n      Topic\\n    </label>\\n    <select [(ngModel)]=\\\"post.topic\\\" name=\\\"topic\\\" id=\\\"topic\\\" class=\\\"form-control-sm\\\">\\n      <option *ngFor=\\\"let topic of topicList\\\" [ngValue]=\\\"topic\\\">{{topic}}</option>\\n    </select>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"form-control-sm\\\">\\n      Write your content below:\\n    </label>\\n    <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"post.postContent\\\" rows=\\\"15\\\" cols=\\\"50\\\"></textarea>\\n  </div>\\n\\n\\n  <div class=\\\"row mt-4\\\">\\n    <button class=\\\"btn btn-danger mr-2\\\" (click)=\\\"deleteDraft()\\\">\\n      Discard\\n    </button>\\n    <button class=\\\"btn btn-success mr-2\\\" (click)=\\\"saveDraft()\\\">\\n      Save\\n    </button>\\n    <button class=\\\"btn btn-success\\\" (click)=\\\"publishPost()\\\">\\n      Publish\\n    </button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {PostServiceClient} from \"../services/post.service.client\";\r\nimport {Post} from \"../models/post.model\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-create-post',\r\n  templateUrl: './create-post.component.html',\r\n  styleUrls: ['./create-post.component.css']\r\n})\r\nexport class CreatePostComponent implements OnInit {\r\n\r\n  post = new Post();\r\n\r\n  //list of acceptable topics\r\n  topicList = [\r\n    'Science',\r\n    'Sports',\r\n    'Politics',\r\n    'Nature',\r\n    'Shopping',\r\n    'Recipes',\r\n    'Travel',\r\n  ];\r\n  constructor(private service:PostServiceClient,\r\n              private router:Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  deleteDraft() {\r\n    if(confirm('Continuing will delete your draft and you will be unable to return to make edits. Continue?')) {\r\n      if (this.post._id) {\r\n        this.service.deletePost(this.post)\r\n      }\r\n      this.router.navigateByUrl('/home');\r\n    }\r\n  }\r\n\r\n  saveDraft() {\r\n    this.post.published = false;\r\n\r\n    //if an id exists, the post already exists in the database\r\n    //this means an update should be done rather than post\r\n    if (this.post._id) {\r\n      //update\r\n    } else {\r\n      this.service.createPost(this.post)\r\n        .then((response) => {\r\n          console.log(response);\r\n          alert('Your draft has been saved!')\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n  publishPost() {\r\n    if(confirm('Continuing will make your content viewable to others. Continue?')) {\r\n      this.post.published = true;\r\n      this.service.createPost(this.post)\r\n        .then((response) => {\r\n          console.log(response);\r\n          alert('Your post has been published!');\r\n          this.router.navigateByUrl('/viewPost/'+response._id);\r\n        })\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Welcome to Lexi's CS5610 Home Page!</h1>\\n  <p>Below you will find all of the work I did for CS 5610 at Northeastern University. </p>\\n  <p>\\n    To proceed directly to my course project, which creates a blogging website, please click\\n    <a routerLink=\\\"/home\\\">here</a>.\\n  </p>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item active\\\">\\n          Github Repositories\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <a href=\\\"https://github.com/lkacoy/webdev-summer-2018-java-server-akacoyannakis\\\">Java Server</a>\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <a href=\\\"https://github.com/lkacoy/webdev-summer2018-client-react-akacoyannakis\\\">React Client</a>\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <a href=\\\"https://github.com/lkacoy/cs5610-react-native\\\">React Native</a>\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <a href=\\\"https://github.com/lkacoy/webdev-summer2018-angular\\\">Angular Client</a>\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <a href=\\\"https://github.com/lkacoy/webdev-summer2018-node\\\">Node Server</a>\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <a href=\\\"https://github.com/lkacoy/webdev-cs5610-project-angular\\\">Project - Angular Client</a>\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <a href=\\\"https://github.com/lkacoy/webdev-cs5610-project\\\">Project - Node Server</a>\\n        </li>\\n      </ul>\\n    </div>\\n\\n    <div class=\\\"col\\\">\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item active\\\">\\n          Heroku Instances\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <a href=\\\"https://web2018-lexikacoyannakis.herokuapp.com/\\\">Java Server</a>\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <a href=\\\"https://web2018-react-lexikacoyannakis.herokuapp.com/\\\">React Client</a>\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <a href=\\\"https://angular-lexikacoyannakis.herokuapp.com/\\\">Angular Client</a>\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <a href=\\\"https://node-lexikacoyannakis.herokuapp.com/\\\">Node Server</a>\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <a href=\\\"https://cs5610project-angular-lexi.herokuapp.com/\\\">Project - Angular Client</a>\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <a href=\\\"https://cs5610project-node-lexi.herokuapp.com/\\\">Project - Node Server</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Login</h1>\\n\\n  <input [(ngModel)]=\\\"username\\\"\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control mb-2 mt-4\\\"/>\\n  <input [(ngModel)]=\\\"password\\\"\\n         placeholder=\\\"password\\\"\\n         type=\\\"password\\\"\\n         class=\\\"form-control mb-2\\\"/>\\n  <small id=\\\"forgotPassword\\\" class=\\\"form-text text-muted\\\">Forgot Password?</small>\\n  <small id=\\\"loginError\\\" class=\\\"text-danger\\\" [hidden]=\\\"!this.loginError\\\">\\n    Login was unsuccessful. Please try again.\\n  </small>\\n  <button (click)=\\\"login(username, password)\\\"\\n          class=\\\"btn btn-primary btn-block mt-4\\\">\\n    Login\\n  </button>\\n\\n  <small id=\\\"register\\\" class=\\\"form-text text-muted\\\">\\n    Don't have an account? <a routerLink=\\\"/register\\\">Register New User</a>\\n  </small>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Route, Router} from \"@angular/router\";\nimport {UserServiceClient} from \"../services/user.service.client\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username;\n  password;\n  loginError:boolean = false;\n\n  login(username, password) {\n    console.log([username, password]);\n    this.service\n      .login(username, password)\n      .then((response) => {\n        if (response && response.error) {\n          this.loginError = true;\n        } else {\n          this.loginError = false;\n          this.router.navigate(['profile']);\n        }\n      });\n  }\n\n  constructor(private router: Router,\n              private service: UserServiceClient) { }\n\n  ngOnInit() {\n  }\n\n}\n","export class Post {\r\n  _id: number;\r\n  username: string;\r\n  postTitle: string;\r\n  postContent: string;\r\n  published: boolean;\r\n  datePublished: string; //must be string and then can format in component.\r\n  dateCreated: string;\r\n  topic: string;\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>{{post.postTitle}}</h1>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {PostServiceClient} from \"../services/post.service.client\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Post} from \"../models/post.model\";\n\n@Component({\n  selector: 'app-post-view',\n  templateUrl: './post-view.component.html',\n  styleUrls: ['./post-view.component.css']\n})\nexport class PostViewComponent implements OnInit {\n\n  postId;\n  post = new Post();\n\n  constructor(private service:PostServiceClient,\n              private activatedRoute:ActivatedRoute) {\n    this.activatedRoute.params.subscribe((params) => this.setParams(params));\n  }\n\n  ngOnInit() {\n  }\n\n  setParams(params) {\n   this.postId = params['id'];\n   console.log(this.postId);\n   this.service.findPostById(this.postId)\n     .then(post => this.post = post);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Profile</h1>\\n\\n  <input [(ngModel)]=\\\"username\\\"\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"firstName\\\"\\n         placeholder=\\\"first name\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"lastName\\\"\\n         placeholder=\\\"lastName\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"email\\\"\\n         placeholder=\\\"email\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"role\\\" class=\\\"form-control\\\" readonly=\\\"{{role==='admin'}}\\\"/>\\n  <button (click)=\\\"update()\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Update\\n  </button>\\n  <button (click)=\\\"delete()\\\"\\n          class=\\\"btn btn-block btn-danger\\\">\\n    Delete Account\\n  </button>\\n\\n  <a (click)=\\\"logout()\\\">Logout</a>\\n  <a routerLink=\\\"/home\\\" class=\\\"ml-2\\\">Home</a>\\n  <a routerLink=\\\"/admin\\\" class=\\\"ml-2\\\" [hidden]=\\\"!this.isAdmin\\\">Admin</a>\\n  <a routerLink=\\\"/createPost\\\" class=\\\"ml-2\\\" [hidden]=\\\"checkRole()\\\">Create Post</a>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {UserServiceClient} from \"../services/user.service.client\";\nimport {User} from \"../../../../webdev-summer2018-angular/src/app/models/user.model.client\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  user:User = new User();\n  username;\n  password;\n  email;\n  firstName;\n  lastName;\n  role;\n  isAdmin:boolean = false;\n\n  constructor(private service: UserServiceClient,\n              private router:Router) { }\n\n  ngOnInit() {\n\n    this.service\n      .profile()\n      .then(user => {\n        this.username = user.username;\n        this.email  = user.email;\n        this.firstName = user.firstName;\n        this.lastName = user.lastName;\n        this.role = user.role;\n        if (user.role === 'admin') this.isAdmin = true;\n      });\n  }\n\n\n  update() {\n    this.user.username = this.username;\n    this.user.password = this.password;\n    this.user.email = this.email;\n    this.user.firstName = this.firstName;\n    this.user.lastName = this.lastName;\n    this.user.role = this.role;\n    this.service.updateUser(this.user)\n      .then(user => {\n        this.user = user;\n        this.router.navigateByUrl('/profile');\n      });\n  }\n\n  logout() {\n    this.service\n      .logout()\n      .then(() =>\n        this.router.navigate(['login']));\n\n  }\n\n  delete() {\n    if (confirm('Continuing will delete your account permanently. Are you sure you wish to continue?')) {\n      this.service.deleteUser(this.username).then( () =>\n        this.router.navigateByUrl('/login')\n      );\n    }\n  }\n\n  checkRole() {\n    if (this.role !== 'blogWriter') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid text-center\\\">\\n  <h1>Welcome to Blogger Central!</h1>\\n  <h3>Find and create blogs!</h3>\\n\\n  <p>Interested in finding some inspiration before creating your own? <a routerLink=\\\"/blog-list\\\">Search some blogs from Tumblr here!</a></p>\\n\\n  <span class=\\\"mr-4\\\"><a routerLink=\\\"/login\\\">Login</a></span>\\n  <span class=\\\"mr-4\\\"><a routerLink=\\\"/register\\\">Create New Account</a></span>\\n  <span><a routerLink=\\\"/\\\">Course Home Page</a></span>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-project-home',\n  templateUrl: './project-home.component.html',\n  styleUrls: ['./project-home.component.css']\n})\nexport class ProjectHomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Create New Account</h1>\\n  <form class=\\\"needs-validation\\\" novalidate>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"usernameInput\\\">Username</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\" required class=\\\"form-control\\\" id=\\\"usernameInput\\\" name=\\\"username\\\" aria-describedby=\\\"usernameInput\\\" placeholder=\\\"Enter username\\\">\\n      <small id=\\\"usernameRequired\\\" class=\\\"text-danger\\\">\\n        Username is required.\\n      </small>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"password\\\">Password</label>\\n      <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" (ngModelChange)=\\\"verifyPasswordMatch()\\\" required class=\\\"form-control\\\"\\n             id=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\">\\n      <small id=\\\"passwordHelp\\\" class=\\\"text-danger\\\">\\n        Password is required.\\n      </small>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <input [(ngModel)]=\\\"password2\\\" required name=\\\"password2\\\"\\n             type=\\\"password\\\"\\n             placeholder=\\\"verify password\\\"\\n             (ngModelChange)=\\\"verifyPasswordMatch()\\\"\\n             class=\\\"form-control mb-2\\\"/>\\n      <small id=\\\"passwordMatch\\\" class=\\\"text-danger\\\" [hidden]=\\\"!this.passwordNotMatch\\\">\\n        Passwords do not match.\\n      </small>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"firstName\\\">First Name</label>\\n      <input [(ngModel)]=\\\"firstName\\\" type=\\\"text\\\" required class=\\\"form-control\\\" id=\\\"firstName\\\" name=\\\"firstName\\\" placeHolder=\\\"First Name\\\">\\n      <small id=\\\"firstNameRequired\\\" class=\\\"text-danger\\\">\\n        First Name is required.\\n      </small>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"lastName\\\">Last Name</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"lastName\\\" required class=\\\"form-control\\\" id=\\\"lastName\\\" name=\\\"lastName\\\" placeholder=\\\"Last Name\\\">\\n      <small id=\\\"lastNameRequired\\\" class=\\\"text-danger\\\">\\n        Last Name is required.\\n      </small>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"email\\\">Email</label>\\n      <input type=\\\"email\\\" [(ngModel)]=\\\"email\\\" required class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Email Address\\\">\\n      <small id=\\\"emailRequired\\\" class=\\\"text-danger\\\">\\n        Email address is required.\\n      </small>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"role\\\">User Role</label>\\n      <select [(ngModel)]=\\\"role\\\" name=\\\"role\\\" id=\\\"role\\\">\\n        <option *ngFor=\\\"let r of roleOptions\\\" [ngValue]=\\\"r.value\\\">{{r.name}}</option>\\n      </select>\\n    </div>\\n    <small id=\\\"usernameTaken\\\" class=\\\"text-danger\\\" [hidden]=\\\"!this.usernameTakenError\\\">\\n      Username has already been taken. Please try a new username.\\n    </small>\\n    <button (click)=\\\"register(username, password)\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Create New Account</button>\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {UserServiceClient} from \"../services/user.service.client\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  username;\n  password;\n  password2;\n  email;\n  firstName;\n  lastName;\n  role;\n  passwordNotMatch = false;\n  usernameTakenError = false;\n\n  roleOptions = [\n    {value:'blogFollower', name: 'Blog Follower'},\n    {value: 'blogWriter', name: 'Blog Writer'}\n  ];\n\n  constructor(private service:UserServiceClient,\n              private router:Router) { }\n\n  ngOnInit() {\n  }\n\n  verifyPasswordMatch() {\n    if (this.password && this.password !== this.password2) {\n      this.passwordNotMatch = true;\n    } else {\n      this.passwordNotMatch = false;\n    }\n    console.log(this.passwordNotMatch);\n  }\n\n  register(username, password) {\n    var user = {username: this.username, password: this.password, firstName: this.firstName, lastName: this.lastName, email: this.email,\n    role: this.role};\n    this.service\n      .createUser(user)\n      .then((response) => {\n        if (response && response.error) {\n          this.usernameTakenError = true;\n        } else {\n          this.usernameTakenError = false;\n          this.router.navigate(['profile']);\n        }\n      });\n\n  }\n\n}\n","export class BloggerApiServiceClient {\r\n  FIND_BY_TAG = 'https://api.tumblr.com/v2/tagged?tag=KEYWORD&limit=LIMIT&api_key=fe1SEpCDiutEE7EDxpcnSo3RhfLoUjUNq0d7mk2xbnW2q1uesn';\r\n  FIND_BLOG_INFO = 'https://api.tumblr.com/v2/blog/KEYWORD/info?api_key=fe1SEpCDiutEE7EDxpcnSo3RhfLoUjUNq0d7mk2xbnW2q1uesn';\r\n\r\n  findPostsBySearchCriteria(keyword, limit)  {\r\n    const url = this.FIND_BY_TAG.replace('KEYWORD', keyword).replace('LIMIT', limit);\r\n    return fetch(url)\r\n      .then(response => response.json());\r\n  }\r\n\r\n  findBlogInfo(id) {\r\n    const url = this.FIND_BLOG_INFO.replace('KEYWORD', id);\r\n    return fetch(url)\r\n      .then(response => response.json());\r\n\r\n  }\r\n}\r\n","export class PostServiceClient {\r\n\r\n  createPost(post) {\r\n    return fetch('http://localhost:3000/api/post', {\r\n      method: 'post',\r\n      body: JSON.stringify(post),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => response.json());\r\n  }\r\n\r\n  deletePost(post) {\r\n    return fetch('http://localhost:3000/api/post', {\r\n      method:'delete',\r\n      body: JSON.stringify(post),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n\r\n  findPostById(postId) {\r\n    return fetch('http://localhost:3000/api/post/'+postId)\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","export class UserServiceClient {\r\n\r\n  login(username, password) {\r\n    const credentials = {\r\n      username: username,\r\n      password: password\r\n    };\r\n    return fetch('http://localhost:3000/api/login', {\r\n      method: 'post',\r\n      body: JSON.stringify(credentials),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => {\r\n      if (response != null) {\r\n        return response.json()\r\n      }else {\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    return fetch('http://localhost:3000/api/logout', {\r\n      method: 'post',\r\n      credentials: 'include'\r\n    });\r\n  }\r\n\r\n  profile() {\r\n    return fetch('http://localhost:3000/api/profile',\r\n      {\r\n        credentials: 'include', // include, same-origin, *omit\r\n      })\r\n      .then(response => response.json());\r\n  }\r\n\r\n  createUser(user) {\r\n    return fetch('http://localhost:3000/api/register', {\r\n      body: JSON.stringify(user),\r\n      credentials: 'include', // include, same-origin, *omit\r\n      method: 'post',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => {\r\n      if (response != null) {\r\n        return response.json()\r\n      }else {\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  updateUser(user) {\r\n    return fetch('http://localhost:3000/api/profile', {\r\n      body: JSON.stringify(user),\r\n      credentials: 'include',\r\n      method: 'put',\r\n      headers:{\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => {\r\n      return response.json();\r\n    });\r\n  }\r\n\r\n  deleteUser(username) {\r\n    return fetch('http://localhost:3000/api/profile', {\r\n      credentials: 'include',\r\n      method: 'delete',\r\n      headers:{\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => {\r\n      return response.json();\r\n    });\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}